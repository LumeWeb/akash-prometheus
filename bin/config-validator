#!/bin/bash

# Validate environment variables
validate_env() {
  required_vars=(
  "AWS_ACCESS_KEY_ID"
  "AWS_SECRET_ACCESS_KEY"
  "AWS_REGION"
  "AWS_BUCKET_NAME"
  "AWS_S3_ENDPOINT"
  "PROMSTER_SCRAPE_ETCD_URL"
  "PROMSTER_ETCD_BASE_PATH"
  "PROMSTER_ETCD_USERNAME"
  "PROMSTER_ETCD_PASSWORD"
  "PROMETHEUS_ADMIN_USERNAME"
  "PROMETHEUS_ADMIN_PASSWORD"
)
  for var in "${required_vars[@]}"; do
    if [ -z "${!var}" ]; then
      echo "Error: ${var} is not set"
      exit 1
    fi
  done
}

# Validate S3 connection
validate_s3() {
  # Test S3 connection using mc CLI
  mc alias set s3 ${AWS_S3_ENDPOINT} ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY} 2>/dev/null
  if ! mc ls s3/${AWS_BUCKET_NAME} > /dev/null; then
    echo "Error: Unable to connect to S3"
    exit 1
  fi
}

# Generate auth web yaml
generate_auth_yaml() {
  hashed_password=$(mkpasswd --method=bcrypt "${PROMETHEUS_ADMIN_PASSWORD}")
  cat > /etc/prometheus/web-config.yml <<EOF
basic_auth_users:
  ${PROMETHEUS_ADMIN_USERNAME}: ${hashed_password}
EOF
}

# Validate Prometheus configuration
validate_prom_config() {
  promtool check config /etc/prometheus/prometheus.yml
  promtool check web-config /etc/prometheus/web-config.yml
}

# Initialize system
init() {
  validate_env
  validate_s3
  generate_auth_yaml
  validate_prom_config
  touch /etc/crontab
  touch ${PROMETHEUS_CONFIG_FILE}
}

case $1 in
  --check-env)
    validate_env
    ;;
  --check-s3)
    validate_s3
    ;;
  --init)
    init
    ;;
  *)
    echo "Usage: config-validator <option>"
    echo "Available options: --check-env, --check-s3, --init"
    exit 1
    ;;
esac
